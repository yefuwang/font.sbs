on:
  push:
    branches:
      - main

name: Create Release

jobs:
  release:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set outputs
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Check outputs
        run: echo ${{ steps.vars.outputs.sha_short }}
      - name: Build docker image
        run: docker build . -t tt
      - name: Generate font
        run: docker run  -v ${PWD}:/font  tt
      - name: Update website
        run: |
          git config --global user.name 'Yefu Wang'
          git config --global user.email 'yefuwang@users.noreply.github.com'
          cp SbsSlim.woff2 docs
          git add docs
          git commit -m "From Github Actions: automatically release the latest font"
          git push
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          zip font_files *.ttf *.woff *.woff2 *.otf
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.vars.outputs.sha_short }}
          release_name: Release ${{ steps.vars.outputs.sha_short }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./font_files.zip
          asset_name: font_files.zip
          asset_content_type: application/zip
      - name: Upload Sample Image
        id: upload-sample-img 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./page0.jpg
          asset_name: sample.jpg
          asset_content_type: image/jpeg
